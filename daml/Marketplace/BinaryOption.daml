module Marketplace.BinaryOption where

import DA.Finance.Types (Id)

import DA.Next.Set


type T = BinaryOption

-- | Reference data describing a binary option.
template BinaryOption
  with
    id : Id
    description : Text
    minPrice : Decimal
    maxPrice : Decimal
    isPublic : Bool
    observers : Set Party
  where
    signatory id.signatories
    observer observers

    key id : Id
    maintainer key.signatories

    choice AddObservers : ContractId BinaryOption
      with
        party : Party
        newObservers : Set Party
      controller party
      do
        assert $ member party $ union id.signatories newObservers
        create this with observers = union observers newObservers

    controller id.signatories can
      BinaryOption_SetObservers : ContractId BinaryOption
        with newObservers : Set Party
        do create this with observers = newObservers

      nonconsuming Settle : ContractId Settled
        with
          outcome : Bool
        do create Settled with ..


template Settled
  with
    id : Id
    description : Text
    minPrice : Decimal
    maxPrice : Decimal
    isPublic : Bool
    observers : Set Party
    outcome : Bool
  where
    signatory id.signatories
    observer observers

    key id : Id
    maintainer key.signatories
